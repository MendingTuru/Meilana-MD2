import Canvas from "discord-canvas"
import { promises } from 'fs'
import { join } from 'path'
import { xpRange } from '../lib/levelling.js'
import moment from 'moment-timezone'
import os from 'os'
import fs from 'fs'
import fetch from 'node-fetch'

let emoj = `${pickRandom([  '🀄️',   '🃏',   '🅰️',   '🅱️',   '🅾️',   '🅿️',   '🆎',   '🆑',   '🆒',   '🆓',   '🆔',   '🆕',   '🆖',   '🆗',   '🆘',   '🆙',   '🆚',   '🇦🇨',   '🇦🇩',   '🇦🇪',   '🇦🇫',   '🇦🇬',   '🇦🇮',   '🇦🇱',   '🇦🇲',   '🇦🇴',   '🇦🇶',   '🇦🇷',   '🇦🇸',   '🇦🇹',   '🇦🇺',   '🇦🇼',   '🇦🇽',   '🇦🇿',   '🇦',   '🇧🇦',   '🇧🇧',   '🇧🇩',   '🇧🇪',   '🇧🇫',   '🇧🇬',   '🇧🇭',   '🇧🇮',   '🇧🇯',   '🇧🇱',   '🇧🇲',   '🇧🇳',   '🇧🇴',   '🇧🇶',   '🇧🇷',   '🇧🇸',   '🇧🇹',   '🇧🇻',   '🇧🇼',   '🇧🇾',   '🇧🇿',   '🇧',   '🇨🇦',   '🇨🇨',   '🇨🇩',   '🇨🇫',   '🇨🇬',   '🇨🇭',   '🇨🇮',   '🇨🇰',   '🇨🇱',   '🇨🇲',   '🇨🇳',   '🇨🇴',   '🇨🇵',   '🇨🇷',   '🇨🇺',   '🇨🇻',   '🇨🇼',   '🇨🇽',   '🇨🇾',   '🇨🇿',   '🇨',   '🇩🇪',   '🇩🇬',   '🇩🇯',   '🇩🇰',   '🇩🇲',   '🇩🇴',   '🇩🇿',   '🇩',   '🇪🇦',   '🇪🇨',   '🇪🇪',   '🇪🇬',   '🇪🇭',   '🇪🇷',   '🇪🇸',   '🇪🇹',   '🇪🇺',   '🇪',   '🇫🇮',   '🇫🇯',   '🇫🇰',   '🇫🇲',   '🇫🇴',   '🇫🇷',   '🇫',   '🇬🇦',   '🇬🇧',   '🇬🇩',   '🇬🇪',   '🇬🇫',   '🇬🇬',   '🇬🇭',   '🇬🇮',   '🇬🇱',   '🇬🇲',   '🇬🇳',   '🇬🇵',   '🇬🇶',   '🇬🇷',   '🇬🇸',   '🇬🇹',   '🇬🇺',   '🇬🇼',   '🇬🇾',   '🇬',   '🇭🇰',   '🇭🇲',   '🇭🇳',   '🇭🇷',   '🇭🇹',   '🇭🇺',   '🇭',   '🇮🇨',   '🇮🇩',   '🇮🇪',   '🇮🇱',   '🇮🇲',   '🇮🇳',   '🇮🇴',   '🇮🇶',   '🇮🇷',   '🇮🇸',   '🇮🇹',   '🇮',   '🇯🇪',   '🇯🇲',   '🇯🇴',   '🇯🇵',   '🇯',   '🇰🇪',   '🇰🇬',   '🇰🇭',   '🇰🇮',   '🇰🇲',   '🇰🇳',   '🇰🇵',   '🇰🇷',   '🇰🇼',   '🇰🇾',   '🇰🇿',   '🇰',   '🇱🇦',   '🇱🇧',   '🇱🇨',   '🇱🇮',   '🇱🇰',   '🇱🇷',   '🇱🇸',   '🇱🇹',   '🇱🇺',   '🇱🇻',   '🇱🇾',   '🇱',   '🇲🇦',   '🇲🇨',   '🇲🇩',   '🇲🇪',   '🇲🇫',   '🇲🇬',   '🇲🇭',   '🇲🇰',   '🇲🇱',   '🇲🇲',   '🇲🇳',   '🇲🇴',   '🇲🇵',   '🇲🇶',   '🇲🇷',   '🇲🇸',   '🇲🇹',   '🇲🇺',   '🇲🇻',   '🇲🇼',   '🇲🇽',   '🇲🇾',   '🇲🇿',   '🇲',   '🇳🇦',   '🇳🇨',   '🇳🇪',   '🇳🇫',   '🇳🇬',   '🇳🇮',   '🇳🇱',   '🇳🇴',   '🇳🇵',   '🇳🇷',   '🇳🇺',   '🇳🇿',   '🇳',   '🇴🇲',   '🇴',   '🇵🇦',   '🇵🇪',   '🇵🇫',   '🇵🇬',   '🇵🇭',   '🇵🇰',   '🇵🇱',   '🇵🇲',   '🇵🇳',   '🇵🇷',   '🇵🇸',   '🇵🇹',   '🇵🇼',   '🇵🇾',   '🇵',   '🇶🇦',   '🇶',   '🇷🇪',   '🇷🇴',   '🇷🇸',   '🇷🇺',   '🇷🇼',   '🇷',   '🇸🇦',   '🇸🇧',   '🇸🇨',   '🇸🇩',   '🇸🇪',   '🇸🇬',   '🇸🇭',   '🇸🇮',   '🇸🇯',   '🇸🇰',   '🇸🇱',   '🇸🇲',   '🇸🇳',   '🇸🇴',   '🇸🇷',   '🇸🇸',   '🇸🇹',   '🇸🇻',   '🇸🇽',   '🇸🇾',   '🇸🇿',   '🇸',   '🇹🇦',   '🇹🇨',   '🇹🇩',   '🇹🇫',   '🇹🇬',   '🇹🇭',   '🇹🇯',   '🇹🇰',   '🇹🇱',   '🇹🇲',   '🇹🇳',   '🇹🇴',   '🇹🇷',   '🇹🇹',   '🇹🇻',   '🇹🇼',   '🇹🇿',   '🇹',   '🇺🇦',   '🇺🇬',   '🇺🇲',   '🇺🇳',   '🇺🇸',   '🇺🇾',   '🇺🇿',   '🇺',   '🇻🇦',   '🇻🇨',   '🇻🇪',   '🇻🇬',   '🇻🇮',   '🇻🇳',   '🇻🇺',   '🇻',   '🇼🇫',   '🇼🇸',   '🇼',   '🇽🇰',   '🇽',   '🇾🇪',   '🇾🇹',   '🇾',   '🇿🇦',   '🇿🇲',   '🇿🇼',   '🇿',   '🈁',   '🈂️',   '🈚️',   '🈯️',   '🈲',   '🈳',   '🈴',   '🈵',   '🈶',   '🈷️',   '🈸',   '🈹',   '🈺',   '🉐',   '🉑',   '🌀',   '🌁',   '🌂',   '🌃',   '🌄',   '🌅',   '🌆',   '🌇',   '🌈',   '🌉',   '🌊',   '🌋',   '🌌',   '🌍',   '🌎',   '🌏',   '🌐',   '🌑',   '🌒',   '🌓',   '🌔',   '🌕',   '🌖',   '🌗',   '🌘',   '🌙',   '🌚',   '🌛',   '🌜',   '🌝',   '🌞',   '🌟',   '🌠',   '🌡️',   '🌤️',   '🌥️',   '🌦️',   '🌧️',   '🌨️',   '🌩️',   '🌪️',   '🌫️',   '🌬️',   '🌭',   '🌮',   '🌯',   '🌰',   '🌱',   '🌲',   '🌳',   '🌴',   '🌵',   '🌶️',   '🌷',   '🌸',   '🌹',   '🌺',   '🌻',   '🌼',   '🌽',   '🌾',   '🌿',   '🍀',   '🍁',   '🍂',   '🍃',   '🍄',   '🍅',   '🍆',   '🍇',   '🍈',   '🍉',   '🍊',   '🍋',   '🍌',   '🍍',   '🍎',   '🍏',   '🍐',   '🍑',   '🍒',   '🍓',   '🍔',   '🍕',   '🍖',   '🍗',   '🍘',   '🍙',   '🍚',   '🍛',   '🍜',   '🍝',   '🍞',   '🍟',   '🍠',   '🍡',   '🍢',   '🍣',   '🍤',   '🍥',   '🍦',   '🍧',   '🍨',   '🍩',   '🍪',   '🍫',   '🍬',   '🍭',   '🍮',   '🍯',   '🍰',   '🍱',   '🍲',   '🍳',   '🍴',   '🍵',   '🍶',   '🍷',   '🍸',   '🍹',   '🍺',   '🍻',   '🍼',   '🍽️',   '🍾',   '🍿',   '🎀',   '🎁',   '🎂',   '🎃',   '🎄',   '🎅🏻',   '🎅🏼',   '🎅🏽',   '🎅🏾',   '🎅🏿',   '🎅',   '🎆',   '🎇',   '🎈',   '🎉',   '🎊',   '🎋',   '🎌',   '🎍',   '🎎',   '🎏',   '🎐',   '🎑',   '🎒',   '🎓',   '🎖️',   '🎗️',   '🎙️',   '🎚️',   '🎛️',   '🎞️',   '🎟️',   '🎠',   '🎡',   '🎢',   '🎣',   '🎤',   '🎥',   '🎦',   '🎧',   '🎨',   '🎩',   '🎪',   '🎫',   '🎬',   '🎭',   '🎮',   '🎯',   '🎰',   '🎱',   '🎲',   '🎳',   '🎴',   '🎵',   '🎶',   '🎷',   '🎸',   '🎹',   '🎺',   '🎻',   '🎼',   '🎽',   '🎾',   '🎿',   '🏀',   '🏁',   '🏂🏻',   '🏂🏼',   '🏂🏽',   '🏂🏾',   '🏂🏿',   '🏂',   '🏃🏻‍♀️',   '🏃🏻‍♂️',   '🏃🏻',   '🏃🏼‍♀️',   '🏃🏼‍♂️',   '🏃🏼',   '🏃🏽‍♀️',   '🏃🏽‍♂️',   '🏃🏽',   '🏃🏾‍♀️',   '🏃🏾‍♂️',   '🏃🏾',   '🏃🏿‍♀️',   '🏃🏿‍♂️',   '🏃🏿',   '🏃‍♀️',   '🏃‍♂️',   '🏃',   '🏄🏻‍♀️',   '🏄🏻‍♂️',   '🏄🏻',   '🏄🏼‍♀️',   '🏄🏼‍♂️',   '🏄🏼',   '🏄🏽‍♀️',   '🏄🏽‍♂️',   '🏄🏽',   '🏄🏾‍♀️',   '🏄🏾‍♂️',   '🏄🏾',   '🏄🏿‍♀️',   '🏄🏿‍♂️',   '🏄🏿',   '🏄‍♀️',   '🏄‍♂️',   '🏄',   '🏅',   '🏆',   '🏇🏻',   '🏇🏼',   '🏇🏽',   '🏇🏾',   '🏇🏿',   '🏇',   '🏈',   '🏉',   '🏊🏻‍♀️',   '🏊🏻‍♂️',   '🏊🏻',   '🏊🏼‍♀️',   '🏊🏼‍♂️',   '🏊🏼',   '🏊🏽‍♀️',   '🏊🏽‍♂️',   '🏊🏽',   '🏊🏾‍♀️',   '🏊🏾‍♂️',   '🏊🏾',   '🏊🏿‍♀️',   '🏊🏿‍♂️',   '🏊🏿',   '🏊‍♀️',   '🏊‍♂️',   '🏊',   '🏋🏻‍♀️',   '🏋🏻‍♂️',   '🏋🏻',   '🏋🏼‍♀️',   '🏋🏼‍♂️',   '🏋🏼',   '🏋🏽‍♀️',   '🏋🏽‍♂️',   '🏋🏽',   '🏋🏾‍♀️',   '🏋🏾‍♂️',   '🏋🏾',   '🏋🏿‍♀️',   '🏋🏿‍♂️',   '🏋🏿',   '🏋️‍♀️',   '🏋️‍♂️',   '🏋️',   '🏌🏻‍♀️',   '🏌🏻‍♂️',   '🏌🏻',   '🏌🏼‍♀️',   '🏌🏼‍♂️',   '🏌🏼',   '🏌🏽‍♀️',   '🏌🏽‍♂️',   '🏌🏽',   '🏌🏾‍♀️',   '🏌🏾‍♂️',   '🏌🏾',   '🏌🏿‍♀️',   '🏌🏿‍♂️',   '🏌🏿',   '🏌️‍♀️',   '🏌️‍♂️',   '🏌️',   '🏍️',   '🏎️',   '🏏',   '🏐',   '🏑',   '🏒',   '🏓',   '🏔️',   '🏕️',   '🏖️',   '🏗️',   '🏘️',   '🏙️',   '🏚️',   '🏛️',   '🏜️',   '🏝️',   '🏞️',   '🏟️',   '🏠',   '🏡',   '🏢',   '🏣',   '🏤',   '🏥',   '🏦',   '🏧',   '🏨',   '🏩',   '🏪',   '🏫',   '🏬',   '🏭',   '🏮',   '🏯',   '🏰',   '🏳️‍🌈',   '🏳️‍⚧️',   '🏳️',   '🏴‍☠️',   '🏴󠁧󠁢󠁥󠁮󠁧󠁿',   '🏴󠁧󠁢󠁳󠁣󠁴󠁿',   '🏴󠁧󠁢󠁷󠁬󠁳󠁿',   '🏴',   '🏵️',   '🏷️',   '🏸',   '🏹',   '🏺',   '🏻',   '🏼',   '🏽',   '🏾',   '🏿',   '🐀',   '🐁',   '🐂',   '🐃',   '🐄',   '🐅',   '🐆',   '🐇',   '🐈‍⬛',   '🐈',   '🐉',   '🐊',   '🐋',   '🐌',   '🐍',   '🐎',   '🐏',   '🐐',   '🐑',   '🐒',   '🐓',   '🐔',   '🐕‍🦺',   '🐕',   '🐖',   '🐗',   '🐘',   '🐙',   '🐚',   '🐛',   '🐜',   '🐝',   '🐞',   '🐟',   '🐠',   '🐡',   '🐢',   '🐣',   '🐤',   '🐥',   '🐦',   '🐧',   '🐨',   '🐩',   '🐪',   '🐫',   '🐬',   '🐭',   '🐮',   '🐯',   '🐰',   '🐱',   '🐲',   '🐳',   '🐴',   '🐵',   '🐶',   '🐷',   '🐸',   '🐹',   '🐺',   '🐻‍❄️',   '🐻',   '🐼',   '🐽',   '🐾',   '🐿️',   '👀',   '👁‍🗨',   '👁️',   '👂🏻',   '👂🏼',   '👂🏽',   '👂🏾',   '👂🏿',   '👂',   '👃🏻',   '👃🏼',   '👃🏽',   '👃🏾',   '👃🏿',   '👃',   '👄',   '👅',   '👆🏻',   '👆🏼',   '👆🏽',   '👆🏾',   '👆🏿',   '👆',   '👇🏻',   '👇🏼',   '👇🏽',   '👇🏾',   '👇🏿',   '👇',   '👈🏻',   '👈🏼',   '👈🏽',   '👈🏾',   '👈🏿',   '👈',   '👉🏻',   '👉🏼',   '👉🏽',   '👉🏾',   '👉🏿',   '👉',   '👊🏻',   '👊🏼',   '👊🏽',   '👊🏾',   '👊🏿',   '👊',   '👋🏻',   '👋🏼',   '👋🏽',   '👋🏾',   '👋🏿',   '👋',   '👌🏻',   '👌🏼',   '👌🏽',   '👌🏾',   '👌🏿',   '👌',   '👍🏻',   '👍🏼',   '👍🏽',   '👍🏾',   '👍🏿',   '👍',   '👎🏻',   '👎🏼',   '👎🏽',   '👎🏾',   '👎🏿',   '👎',   '👏🏻',   '👏🏼',   '👏🏽',   '👏🏾',   '👏🏿',   '👏',   '👐🏻',   '👐🏼',   '👐🏽',   '👐🏾',   '👐🏿',   '👐',   '👑',   '👒',   '👓',   '👔',   '👕',   '👖',   '👗',   '👘',   '👙',   '👚',   '👛',   '👜',   '👝',   '👞',   '👟',   '👠',   '👡',   '👢',   '👣',   '👤',   '👥',   '👦🏻',   '👦🏼',   '👦🏽',   '👦🏾',   '👦🏿',   '👦',   '👧🏻',   '👧🏼',   '👧🏽',   '👧🏾',   '👧🏿',   '👧',   '👨🏻‍🌾',   '👨🏻‍🍳',   '👨🏻‍🍼',   '👨🏻‍🎄',   '👨🏻‍🎓',   '👨🏻‍🎤',   '👨🏻‍🎨',   '👨🏻‍🏫',   '👨🏻‍🏭',   '👨🏻‍💻',   '👨🏻‍💼',   '👨🏻‍🔧',   '👨🏻‍🔬',   '👨🏻‍🚀',   '👨🏻‍🚒',   '👨🏻‍🤝‍👨🏼',   '👨🏻‍🤝‍👨🏽',   '👨🏻‍🤝‍👨🏾',   '👨🏻‍🤝‍👨🏿',   '👨🏻‍🦯',   '👨🏻‍🦰',   '👨🏻‍🦱',   '👨🏻‍🦲',   '👨🏻‍🦳',   '👨🏻‍🦼',   '👨🏻‍🦽',   '👨🏻‍⚕️',   '👨🏻‍⚖️',   '👨🏻‍✈️',   '👨🏻',   '👨🏼‍🌾',   '👨🏼‍🍳',   '👨🏼‍🍼',   '👨🏼‍🎄',   '👨🏼‍🎓',   '👨🏼‍🎤',   '👨🏼‍🎨',   '👨🏼‍🏫',   '👨🏼‍🏭',   '👨🏼‍💻',   '👨🏼‍💼',   '👨🏼‍🔧',   '👨🏼‍🔬',   '👨🏼‍🚀',   '👨🏼‍🚒',   '👨🏼‍🤝‍👨🏻',   '👨🏼‍🤝‍👨🏽',   '👨🏼‍🤝‍👨🏾',   '👨🏼‍🤝‍👨🏿',   '👨🏼‍🦯',   '👨🏼‍🦰',   '👨🏼‍🦱',   '👨🏼‍🦲',   '👨🏼‍🦳',   '👨🏼‍🦼',   '👨🏼‍🦽',   '👨🏼‍⚕️',   '👨🏼‍⚖️',   '👨🏼‍✈️',   '👨🏼',   '👨🏽‍🌾',   '👨🏽‍🍳',   '👨🏽‍🍼',   '👨🏽‍🎄',   '👨🏽‍🎓',   '👨🏽‍🎤',   '👨🏽‍🎨',   '👨🏽‍🏫',   '👨🏽‍🏭',   '👨🏽‍💻',   '👨🏽‍💼',   '👨🏽‍🔧',   '👨🏽‍🔬',   '👨🏽‍🚀',   '👨🏽‍🚒',   '👨🏽‍🤝‍👨🏻',   '👨🏽‍🤝‍👨🏼',   '👨🏽‍🤝‍👨🏾',   '👨🏽‍🤝‍👨🏿',   '👨🏽‍🦯',   '👨🏽‍🦰',   '👨🏽‍🦱',   '👨🏽‍🦲',   '👨🏽‍🦳',   '👨🏽‍🦼',   '👨🏽‍🦽',   '👨🏽‍⚕️',   '👨🏽‍⚖️',   '👨🏽‍✈️',   '👨🏽',   '👨🏾‍🌾',   '👨🏾‍🍳',   '👨🏾‍🍼',   '👨🏾‍🎄',   '👨🏾‍🎓',   '👨🏾‍🎤',   '👨🏾‍🎨',   '👨🏾‍🏫',   '👨🏾‍🏭',   '👨🏾‍💻',   '👨🏾‍💼',   '👨🏾‍🔧',   '👨🏾‍🔬',   '👨🏾‍🚀',   '👨🏾‍🚒',   '👨🏾‍🤝‍👨🏻',   '👨🏾‍🤝‍👨🏼',   '👨🏾‍🤝‍👨🏽',   '👨🏾‍🤝‍👨🏿',   '👨🏾‍🦯',   '👨🏾‍🦰',   '👨🏾‍🦱',   '👨🏾‍🦲',   '👨🏾‍🦳',   '👨🏾‍🦼',   '👨🏾‍🦽',   '👨🏾‍⚕️',   '👨🏾‍⚖️',   '👨🏾‍✈️',   '👨🏾',   '👨🏿‍🌾',   '👨🏿‍🍳',   '👨🏿‍🍼',   '👨🏿‍🎄',   '👨🏿‍🎓',   '👨🏿‍🎤',   '👨🏿‍🎨',   '👨🏿‍🏫',   '👨🏿‍🏭',   '👨🏿‍💻',   '👨🏿‍💼',   '👨🏿‍🔧',   '👨🏿‍🔬',   '👨🏿‍🚀',   '👨🏿‍🚒',   '👨🏿‍🤝‍👨🏻',   '👨🏿‍🤝‍👨🏼',   '👨🏿‍🤝‍👨🏽',   '👨🏿‍🤝‍👨🏾',   '👨🏿‍🦯',   '👨🏿‍🦰',   '👨🏿‍🦱',   '👨🏿‍🦲',   '👨🏿‍🦳',   '👨🏿‍🦼',   '👨🏿‍🦽',   '👨🏿‍⚕️',   '👨🏿‍⚖️',   '👨🏿‍✈️',   '👨🏿',   '👨‍🌾',   '👨‍🍳',   '👨‍🍼',   '👨‍🎄',   '👨‍🎓',   '👨‍🎤',   '👨‍🎨',   '👨‍🏫',   '👨‍🏭',   '👨‍👦‍👦',   '👨‍👦',   '👨‍👧‍👦',   '👨‍👧‍👧',   '👨‍👧',   '👨‍👨‍👦‍👦',   '👨‍👨‍👦',   '👨‍👨‍👧‍👦',   '👨‍👨‍👧‍👧',   '👨‍👨‍👧',   '👨‍👩‍👦‍👦',   '👨‍👩‍👦',   '👨‍👩‍👧‍👦',   '👨‍👩‍👧‍👧',   '👨‍👩‍👧',   '👨‍💻',   '👨‍💼',   '👨‍🔧',   '👨‍🔬',   '👨‍🚀',   '👨‍🚒',   '👨‍🦯',   '👨‍🦰',   '👨‍🦱',   '👨‍🦲',   '👨‍🦳',   '👨‍🦼',   '👨‍🦽',   '👨‍⚕️',   '👨‍⚖️',   '👨‍✈️',   '👨‍❤️‍👨',   '👨‍❤️‍💋‍👨',   '👨',   '👩🏻‍🌾',   '👩🏻‍🍳',   '👩🏻‍🍼',   '👩🏻‍🎄',   '👩🏻‍🎓',   '👩🏻‍🎤',   '👩🏻‍🎨',   '👩🏻‍🏫',   '👩🏻‍🏭',   '👩🏻‍💻',   '👩🏻‍💼',   '👩🏻‍🔧',   '👩🏻‍🔬',   '👩🏻‍🚀',   '👩🏻‍🚒',   '👩🏻‍🤝‍👨🏼',   '👩🏻‍🤝‍👨🏽',   '👩🏻‍🤝‍👨🏾',   '👩🏻‍🤝‍👨🏿',   '👩🏻‍🤝‍👩🏼',   '👩🏻‍🤝‍👩🏽',   '👩🏻‍🤝‍👩🏾',   '👩🏻‍🤝‍👩🏿',   '👩🏻‍🦯',   '👩🏻‍🦰',   '👩🏻‍🦱',   '👩🏻‍🦲',   '👩🏻‍🦳',   '👩🏻‍🦼',   '👩🏻‍🦽',   '👩🏻‍⚕️',   '👩🏻‍⚖️',   '👩🏻‍✈️',   '👩🏻',   '👩🏼‍🌾',   '👩🏼‍🍳',   '👩🏼‍🍼',   '👩🏼‍🎄',   '👩🏼‍🎓',   '👩🏼‍🎤',   '👩🏼‍🎨',   '👩🏼‍🏫',   '👩🏼‍🏭',   '👩🏼‍💻',   '👩🏼‍💼',   '👩🏼‍🔧',   '👩🏼‍🔬',   '👩🏼‍🚀',   '👩🏼‍🚒',   '👩🏼‍🤝‍👨🏻',   '👩🏼‍🤝‍👨🏽',   '👩🏼‍🤝‍👨🏾',   '👩🏼‍🤝‍👨🏿',   '👩🏼‍🤝‍👩🏻',   '👩🏼‍🤝‍👩🏽',   '👩🏼‍🤝‍👩🏾',   '👩🏼‍🤝‍👩🏿',   '👩🏼‍🦯',   '👩🏼‍🦰',   '👩🏼‍🦱',   '👩🏼‍🦲',   '👩🏼‍🦳',   '👩🏼‍🦼',   '👩🏼‍🦽',   '👩🏼‍⚕️',   '👩🏼‍⚖️',   '👩🏼‍✈️',   '👩🏼',   '👩🏽‍🌾',   '👩🏽‍🍳',   '👩🏽‍🍼',   '👩🏽‍🎄',   '👩🏽‍🎓',   '👩🏽‍🎤',   '👩🏽‍🎨',   '👩🏽‍🏫',   '👩🏽‍🏭',   '👩🏽‍💻',   '👩🏽‍💼',   '👩🏽‍🔧',   '👩🏽‍🔬',   '👩🏽‍🚀',   '👩🏽‍🚒',   '👩🏽‍🤝‍👨🏻',   '👩🏽‍🤝‍👨🏼',   '👩🏽‍🤝‍👨🏾',   '👩🏽‍🤝‍👨🏿',   '👩🏽‍🤝‍👩🏻',   '👩🏽‍🤝‍👩🏼',   '👩🏽‍🤝‍👩🏾',   '👩🏽‍🤝‍👩🏿',   '👩🏽‍🦯',   '👩🏽‍🦰',   '👩🏽‍🦱',   '👩🏽‍🦲',   '👩🏽‍🦳',   '👩🏽‍🦼',   '👩🏽‍🦽',   '👩🏽‍⚕️',   '👩🏽‍⚖️',   '👩🏽‍✈️',   '👩🏽',   '👩🏾‍🌾',   '👩🏾‍🍳',   '👩🏾‍🍼',   '👩🏾‍🎄',   '👩🏾‍🎓',   '👩🏾‍🎤',   '👩🏾‍🎨',   '👩🏾‍🏫',   '👩🏾‍🏭',   '👩🏾‍💻',   '👩🏾‍💼',   '👩🏾‍🔧',   '👩🏾‍🔬',   '👩🏾‍🚀',   '👩🏾‍🚒',   '👩🏾‍🤝‍👨🏻',   '👩🏾‍🤝‍👨🏼',   '👩🏾‍🤝‍👨🏽',   '👩🏾‍🤝‍👨🏿',   '👩🏾‍🤝‍👩🏻',   '👩🏾‍🤝‍👩🏼',   '👩🏾‍🤝‍👩🏽',   '👩🏾‍🤝‍👩🏿',   '👩🏾‍🦯',   '👩🏾‍🦰',   '👩🏾‍🦱',   '👩🏾‍🦲',   '👩🏾‍🦳',   '👩🏾‍🦼',   '👩🏾‍🦽',   '👩🏾‍⚕️',   '👩🏾‍⚖️',   '👩🏾‍✈️',   '👩🏾',   '👩🏿‍🌾',   '👩🏿‍🍳',   '👩🏿‍🍼',   '👩🏿‍🎄',   '👩🏿‍🎓',   '👩🏿‍🎤',   '👩🏿‍🎨',   '👩🏿‍🏫',   '👩🏿‍🏭',   '👩🏿‍💻',   '👩🏿‍💼',   '👩🏿‍🔧',   '👩🏿‍🔬',   '👩🏿‍🚀',   '👩🏿‍🚒',   '👩🏿‍🤝‍👨🏻',   '👩🏿‍🤝‍👨🏼',   '👩🏿‍🤝‍👨🏽',   '👩🏿‍🤝‍👨🏾',   '👩🏿‍🤝‍👩🏻',   '👩🏿‍🤝‍👩🏼',   '👩🏿‍🤝‍👩🏽',   '👩🏿‍🤝‍👩🏾',   '👩🏿‍🦯',   '👩🏿‍🦰',   '👩🏿‍🦱',   '👩🏿‍🦲',   '👩🏿‍🦳',   '👩🏿‍🦼',   '👩🏿‍🦽',   '👩🏿‍⚕️',   '👩🏿‍⚖️',   '👩🏿‍✈️',   '👩🏿',   '👩‍🌾',   '👩‍🍳',   '👩‍🍼',   '👩‍🎄',   '👩‍🎓',   '👩‍🎤',   '👩‍🎨',   '👩‍🏫',   '👩‍🏭',   '👩‍👦‍👦',   '👩‍👦',   '👩‍👧‍👦',   '👩‍👧‍👧',   '👩‍👧',   '👩‍👩‍👦‍👦',   '👩‍👩‍👦',   '👩‍👩‍👧‍👦',   '👩‍👩‍👧‍👧',   '👩‍👩‍👧',   '👩‍💻',   '👩‍💼',   '👩‍🔧',   '👩‍🔬',   '👩‍🚀',   '👩‍🚒',   '👩‍🦯',   '👩‍🦰',   '👩‍🦱',   '👩‍🦲',   '👩‍🦳',   '👩‍🦼',   '👩‍🦽',   '👩‍⚕️',   '👩‍⚖️',   '👩‍✈️',   '👩‍❤️‍👨',   '👩‍❤️‍👩',   '👩‍❤️‍💋‍👨',   '👩‍❤️‍💋‍👩',   '👩',   '👪',   '👫🏻',   '👫🏼',   '👫🏽',   '👫🏾',   '👫🏿',   '👫',   '👬🏻',   '👬🏼',   '👬🏽',   '👬🏾',   '👬🏿',   '👬',   '👭🏻',   '👭🏼',   '👭🏽',   '👭🏾',   '👭🏿',   '👭',   '👮🏻‍♀️',   '👮🏻‍♂️',   '👮🏻',   '👮🏼‍♀️',   '👮🏼‍♂️',   '👮🏼',   '👮🏽‍♀️',   '👮🏽‍♂️',   '👮🏽',   '👮🏾‍♀️',   '👮🏾‍♂️',   '👮🏾',   '👮🏿‍♀️',   '👮🏿‍♂️',   '👮🏿',   '👮‍♀️',   '👮‍♂️',   '👮',   '👯‍♀️',   '👯‍♂️',   '👯',   '👰🏻‍♀️',   '👰🏻‍♂️',   '👰🏻',   '👰🏼‍♀️',   '👰🏼‍♂️',   '👰🏼',   '👰🏽‍♀️',   '👰🏽‍♂️',   '👰🏽',   '👰🏾‍♀️',   '👰🏾‍♂️',   '👰🏾',   '👰🏿‍♀️',   '👰🏿‍♂️',   '👰🏿',   '👰‍♀️',   '👰‍♂️',   '👰',   '👱🏻‍♀️',   '👱🏻‍♂️',   '👱🏻',   '👱🏼‍♀️',   '👱🏼‍♂️',   '👱🏼',   '👱🏽‍♀️',   '👱🏽‍♂️',   '👱🏽',   '👱🏾‍♀️',   '👱🏾‍♂️',   '👱🏾',   '👱🏿‍♀️',   '👱🏿‍♂️',   '👱🏿',   '👱‍♀️',   '👱‍♂️',   '👱',   '👲🏻',   '👲🏼',   '👲🏽',   '👲🏾',   '👲🏿',   '👲',   '👳🏻‍♀️',   '👳🏻‍♂️',   '👳🏻',   '👳🏼‍♀️',   '👳🏼‍♂️',   '👳🏼',   '👳🏽‍♀️',   '👳🏽‍♂️',   '👳🏽',   '👳🏾‍♀️',   '👳🏾‍♂️',   '👳🏾',   '👳🏿‍♀️',   '👳🏿‍♂️',   '👳🏿',   '👳‍♀️',   '👳‍♂️',   '👳',   '👴🏻',   '👴🏼',   '👴🏽',   '👴🏾',   '👴🏿',   '👴',   '👵🏻',   '👵🏼',   '👵🏽',   '👵🏾',   '👵🏿',   '👵',   '👶🏻',   '👶🏼',   '👶🏽',   '👶🏾',   '👶🏿',   '👶',   '👷🏻‍♀️',   '👷🏻‍♂️',   '👷🏻',   '👷🏼‍♀️',   '👷🏼‍♂️',   '👷🏼',   '👷🏽‍♀️',   '👷🏽‍♂️',   '👷🏽',   '👷🏾‍♀️',   '👷🏾‍♂️',   '👷🏾',   '👷🏿‍♀️',   '👷🏿‍♂️',   '👷🏿',   '👷‍♀️',   '👷‍♂️',   '👷',   '👸🏻',   '👸🏼',   '👸🏽',   '👸🏾',   '👸🏿',   '👸',   '👹',   '👺',   '👻',   '👼🏻',   '👼🏼',   '👼🏽',   '👼🏾',   '👼🏿',   '👼',   '👽',   '👾',   '👿',   '💀',   '💁🏻‍♀️',   '💁🏻‍♂️',   '💁🏻',   '💁🏼‍♀️',   '💁🏼‍♂️',   '💁🏼',   '💁🏽‍♀️',   '💁🏽‍♂️',   '💁🏽',   '💁🏾‍♀️',   '💁🏾‍♂️',   '💁🏾',   '💁🏿‍♀️',   '💁🏿‍♂️',   '💁🏿',   '💁‍♀️',   '💁‍♂️',   '💁',   '💂🏻‍♀️',   '💂🏻‍♂️',   '💂🏻',   '💂🏼‍♀️',   '💂🏼‍♂️',   '💂🏼',   '💂🏽‍♀️',   '💂🏽‍♂️',   '💂🏽',   '💂🏾‍♀️',   '💂🏾‍♂️',   '💂🏾',   '💂🏿‍♀️',   '💂🏿‍♂️',   '💂🏿',   '💂‍♀️',   '💂‍♂️',   '💂',   '💃🏻',   '💃🏼',   '💃🏽',   '💃🏾',   '💃🏿',   '💃',   '💄',   '💅🏻',   '💅🏼',   '💅🏽',   '💅🏾',   '💅🏿',   '💅',   '💆🏻‍♀️',   '💆🏻‍♂️',   '💆🏻',   '💆🏼‍♀️',   '💆🏼‍♂️',   '💆🏼',   '💆🏽‍♀️',   '💆🏽‍♂️',   '💆🏽',   '💆🏾‍♀️',   '💆🏾‍♂️',   '💆🏾',   '💆🏿‍♀️',   '💆🏿‍♂️',   '💆🏿',   '💆‍♀️',   '💆‍♂️',   '💆',   '💇🏻‍♀️',   '💇🏻‍♂️',   '💇🏻',   '💇🏼‍♀️',   '💇🏼‍♂️',   '💇🏼',   '💇🏽‍♀️',   '💇🏽‍♂️',   '💇🏽',   '💇🏾‍♀️',   '💇🏾‍♂️',   '💇🏾',   '💇🏿‍♀️',   '💇🏿‍♂️',   '💇🏿',   '💇‍♀️',   '💇‍♂️',   '💇',   '💈',   '💉',   '💊',   '💋',   '💌',   '💍',   '💎',   '💏',   '💐',   '💑',   '💒',   '💓',   '💔',   '💕',   '💖',   '💗',   '💘',   '💙',   '💚',   '💛',   '💜',   '💝',   '💞',   '💟',   '💠',   '💡',   '💢',   '💣',   '💤',   '💥',   '💦',   '💧',   '💨',   '💩',   '💪🏻',   '💪🏼',   '💪🏽',   '💪🏾',   '💪🏿',   '💪',   '💫',   '💬',   '💭',   '💮',   '💯',   '💰',   '💱',   '💲',   '💳',   '💴',   '💵',   '💶',   '💷',   '💸',   '💹',   '💺',   '💻',   '💼',   '💽',   '💾',   '💿',   '📀',   '📁',   '📂',   '📃',   '📄',   '📅',   '📆',   '📇',   '📈',   '📉',   '📊',   '📋',   '📌',   '📍',   '📎',   '📏',   '📐',   '📑',   '📒',   '📓',   '📔',   '📕',   '📖',   '📗',   '📘',   '📙',   '📚',   '📛',   '📜',   '📝',   '📞',   '📟',   '📠',   '📡',   '📢',   '📣',   '📤',   '📥',   '📦',   '📧',   '📨',   '📩',   '📪',   '📫',   '📬',   '📭',   '📮',   '📯',   '📰',   '📱',   '📲',   '📳',   '📴',   '📵',   '📶',   '📷',   '📸',   '📹',   '📺',   '📻',   '📼',   '📽️',   '📿',   '🔀',   '🔁',   '🔂',   '🔃',   '🔄',   '🔅',   '🔆',   '🔇',   '🔈',   '🔉',   '🔊',   '🔋',   '🔌',   '🔍',   '🔎',   '🔏',   '🔐',   '🔑',   '🔒',   '🔓',   '🔔',   '🔕',   '🔖',   '🔗',   '🔘',   '🔙',   '🔚',   '🔛',   '🔜',   '🔝',   '🔞',   '🔟',   '🔠',   '🔡',   '🔢',   '🔣',   '🔤',   '🔥',   '🔦',   '🔧',   '🔨',   '🔩',   '🔪',   '🔫',   '🔬',   '🔭',   '🔮',   '🔯',   '🔰',   '🔱',   '🔲',   '🔳',   '🔴',   '🔵',   '🔶',   '🔷',   '🔸',   '🔹',   '🔺',   '🔻',   '🔼',   '🔽',   '🕉️',   '🕊️',   '🕋',   '🕌',   '🕍',   '🕎',   '🕐',   '🕑',   '🕒',   '🕓',   '🕔',   '🕕',   '🕖',   '🕗',   '🕘',   '🕙',   '🕚',   '🕛',   '🕜',   '🕝',   '🕞',   '🕟',   '🕠',   '🕡',   '🕢',   '🕣',   '🕤',   '🕥',   '🕦',   '🕧',   '🕯️',   '🕰️',   '🕳️',   '🕴🏻‍♀️',   '🕴🏻‍♂️',   '🕴🏻',   '🕴🏼‍♀️',   '🕴🏼‍♂️',   '🕴🏼',   '🕴🏽‍♀️',   '🕴🏽‍♂️',   '🕴🏽',   '🕴🏾‍♀️',   '🕴🏾‍♂️',   '🕴🏾',   '🕴🏿‍♀️',   '🕴🏿‍♂️',   '🕴🏿',   '🕴️‍♀️',   '🕴️‍♂️',   '🕴️',   '🕵🏻‍♀️',   '🕵🏻‍♂️',   '🕵🏻',   '🕵🏼‍♀️',   '🕵🏼‍♂️',   '🕵🏼',   '🕵🏽‍♀️',   '🕵🏽‍♂️',   '🕵🏽',   '🕵🏾‍♀️',   '🕵🏾‍♂️',   '🕵🏾',   '🕵🏿‍♀️',   '🕵🏿‍♂️',   '🕵🏿',   '🕵️‍♀️',   '🕵️‍♂️',   '🕵️',   '🕶️',   '🕷️',   '🕸️',   '🕹️',   '🕺🏻',   '🕺🏼',   '🕺🏽',   '🕺🏾',   '🕺🏿',   '🕺',   '🖇️',   '🖊️',   '🖋️',   '🖌️',   '🖍️',   '🖐🏻',   '🖐🏼',   '🖐🏽',   '🖐🏾',   '🖐🏿',   '🖐️',   '🖕🏻',   '🖕🏼',   '🖕🏽',   '🖕🏾',   '🖕🏿',   '🖕',   '🖖🏻',   '🖖🏼',   '🖖🏽',   '🖖🏾',   '🖖🏿',   '🖖',   '🖤',   '🖥️',   '🖨️',   '🖱️',   '🖲️',   '🖼️',   '🗂️',   '🗃️',   '🗄️',   '🗑️',   '🗒️',   '🗓️',   '🗜️',   '🗝️',   '🗞️',   '🗡️',   '🗣️',   '🗨️',   '🗯️',   '🗳️',   '🗺️',   '🗻',   '🗼',   '🗽',   '🗾',   '🗿',   '😀',   '😁',   '😂',   '😃',   '😄',   '😅',   '😆',   '😇',   '😈',   '😉',   '😊',   '😋',   '😌',   '😍',   '😎',   '😏',   '😐',   '😑',   '😒',   '😓',   '😔',   '😕',   '😖',   '😗',   '😘',   '😙',   '😚',   '😛',   '😜',   '😝',   '😞',   '😟',   '😠',   '😡',   '😢',   '😣',   '😤',   '😥',   '😦',   '😧',   '😨',   '😩',   '😪',   '😫',   '😬',   '😭',   '😮',   '😯',   '😰',   '😱',   '😲',   '😳',   '😴',   '😵',   '😶',   '😷',   '😸',   '😹',   '😺',   '😻',   '😼',   '😽',   '😾',   '😿',   '🙀',   '🙁',   '🙂',   '🙃',   '🙄',   '🙅🏻‍♀️',   '🙅🏻‍♂️',   '🙅🏻',   '🙅🏼‍♀️',   '🙅🏼‍♂️',   '🙅🏼',   '🙅🏽‍♀️',   '🙅🏽‍♂️',   '🙅🏽',   '🙅🏾‍♀️',   '🙅🏾‍♂️',   '🙅🏾',   '🙅🏿‍♀️',   '🙅🏿‍♂️',   '🙅🏿',   '🙅‍♀️',   '🙅‍♂️',   '🙅',   '🙆🏻‍♀️',   '🙆🏻‍♂️',   '🙆🏻',   '🙆🏼‍♀️',   '🙆🏼‍♂️',   '🙆🏼',   '🙆🏽‍♀️',   '🙆🏽‍♂️',   '🙆🏽',   '🙆🏾‍♀️',   '🙆🏾‍♂️',   '🙆🏾',   '🙆🏿‍♀️',   '🙆🏿‍♂️',   '🙆🏿',   '🙆‍♀️',   '🙆‍♂️',   '🙆',   '🙇🏻‍♀️',   '🙇🏻‍♂️',   '🙇🏻',   '🙇🏼‍♀️',   '🙇🏼‍♂️',   '🙇🏼',   '🙇🏽‍♀️',   '🙇🏽‍♂️',   '🙇🏽',   '🙇🏾‍♀️',   '🙇🏾‍♂️',   '🙇🏾',   '🙇🏿‍♀️',   '🙇🏿‍♂️',   '🙇🏿',   '🙇‍♀️',   '🙇‍♂️',   '🙇',   '🙈',   '🙉',   '🙊',   '🙋🏻‍♀️',   '🙋🏻‍♂️',   '🙋🏻',   '🙋🏼‍♀️',   '🙋🏼‍♂️',   '🙋🏼',   '🙋🏽‍♀️',   '🙋🏽‍♂️',   '🙋🏽',   '🙋🏾‍♀️',   '🙋🏾‍♂️',   '🙋🏾',   '🙋🏿‍♀️',   '🙋🏿‍♂️',   '🙋🏿',   '🙋‍♀️',   '🙋‍♂️',   '🙋',   '🙌🏻',   '🙌🏼',   '🙌🏽',   '🙌🏾',   '🙌🏿',   '🙌',   '🙍🏻‍♀️',   '🙍🏻‍♂️',   '🙍🏻',   '🙍🏼‍♀️',   '🙍🏼‍♂️',   '🙍🏼',   '🙍🏽‍♀️',   '🙍🏽‍♂️',   '🙍🏽',   '🙍🏾‍♀️',   '🙍🏾‍♂️',   '🙍🏾',   '🙍🏿‍♀️',   '🙍🏿‍♂️',   '🙍🏿',   '🙍‍♀️',   '🙍‍♂️',   '🙍',   '🙎🏻‍♀️',   '🙎🏻‍♂️',   '🙎🏻',   '🙎🏼‍♀️',   '🙎🏼‍♂️',   '🙎🏼',   '🙎🏽‍♀️',   '🙎🏽‍♂️',   '🙎🏽',   '🙎🏾‍♀️',   '🙎🏾‍♂️',   '🙎🏾',   '🙎🏿‍♀️',   '🙎🏿‍♂️',   '🙎🏿',   '🙎‍♀️',   '🙎‍♂️',   '🙎',   '🙏🏻',   '🙏🏼',   '🙏🏽',   '🙏🏾',   '🙏🏿',   '🙏',   '🚀',   '🚁',   '🚂',   '🚃',   '🚄',   '🚅',   '🚆',   '🚇',   '🚈',   '🚉',   '🚊',   '🚋',   '🚌',   '🚍',   '🚎',   '🚏',   '🚐',   '🚑',   '🚒',   '🚓',   '🚔',   '🚕',   '🚖',   '🚗',   '🚘',   '🚙',   '🚚',   '🚛',   '🚜',   '🚝',   '🚞',   '🚟',   '🚠',   '🚡',   '🚢',   '🚣🏻‍♀️',   '🚣🏻‍♂️',   '🚣🏻',   '🚣🏼‍♀️',   '🚣🏼‍♂️',   '🚣🏼',   '🚣🏽‍♀️',   '🚣🏽‍♂️',   '🚣🏽',   '🚣🏾‍♀️',   '🚣🏾‍♂️',   '🚣🏾',   '🚣🏿‍♀️',   '🚣🏿‍♂️',   '🚣🏿',   '🚣‍♀️',   '🚣‍♂️',   '🚣',   '🚤',   '🚥',   '🚦',   '🚧',   '🚨',   '🚩',   '🚪',   '🚫',   '🚬',   '🚭',   '🚮',   '🚯',   '🚰',   '🚱',   '🚲',   '🚳',   '🚴🏻‍♀️',   '🚴🏻‍♂️',   '🚴🏻',   '🚴🏼‍♀️',   '🚴🏼‍♂️',   '🚴🏼',   '🚴🏽‍♀️',   '🚴🏽‍♂️',   '🚴🏽',   '🚴🏾‍♀️',   '🚴🏾‍♂️',   '🚴🏾',   '🚴🏿‍♀️',   '🚴🏿‍♂️',   '🚴🏿',   '🚴‍♀️',   '🚴‍♂️',   '🚴',   '🚵🏻‍♀️',   '🚵🏻‍♂️',   '🚵🏻',   '🚵🏼‍♀️',   '🚵🏼‍♂️',   '🚵🏼',   '🚵🏽‍♀️',   '🚵🏽‍♂️',   '🚵🏽',   '🚵🏾‍♀️',   '🚵🏾‍♂️',   '🚵🏾',   '🚵🏿‍♀️',   '🚵🏿‍♂️',   '🚵🏿',   '🚵‍♀️',   '🚵‍♂️',   '🚵',   '🚶🏻‍♀️',   '🚶🏻‍♂️',   '🚶🏻',   '🚶🏼‍♀️',   '🚶🏼‍♂️',   '🚶🏼',   '🚶🏽‍♀️',   '🚶🏽‍♂️',   '🚶🏽',   '🚶🏾‍♀️',   '🚶🏾‍♂️',   '🚶🏾',   '🚶🏿‍♀️',   '🚶🏿‍♂️',   '🚶🏿',   '🚶‍♀️',   '🚶‍♂️',   '🚶',   '🚷',   '🚸',   '🚹',   '🚺',   '🚻',   '🚼',   '🚽',   '🚾',   '🚿',   '🛀🏻',   '🛀🏼',   '🛀🏽',   '🛀🏾',   '🛀🏿',   '🛀',   '🛁',   '🛂',   '🛃',   '🛄',   '🛅',   '🛋️',   '🛌🏻',   '🛌🏼',   '🛌🏽',   '🛌🏾',   '🛌🏿',   '🛌',   '🛍️',   '🛎️',   '🛏️',   '🛐',   '🛑',   '🛒',   '🛕',   '🛖',   '🛗',   '🛠️',   '🛡️',   '🛢️',   '🛣️',   '🛤️',   '🛥️',   '🛩️',   '🛫',   '🛬',   '🛰️',   '🛳️',   '🛴',   '🛵',   '🛶',   '🛷',   '🛸',   '🛹',   '🛺',   '🛻',   '🛼',   '🟠',   '🟡',   '🟢',   '🟣',   '🟤',   '🟥',   '🟦',   '🟧',   '🟨',   '🟩',   '🟪',   '🟫',   '🤌🏻',   '🤌🏼',   '🤌🏽',   '🤌🏾',   '🤌🏿',   '🤌',   '🤍',   '🤎',   '🤏🏻',   '🤏🏼',   '🤏🏽',   '🤏🏾',   '🤏🏿',   '🤏',   '🤐',   '🤑',   '🤒',   '🤓',   '🤔',   '🤕',   '🤖',   '🤗',   '🤘🏻',   '🤘🏼',   '🤘🏽',   '🤘🏾',   '🤘🏿',   '🤘',   '🤙🏻',   '🤙🏼',   '🤙🏽',   '🤙🏾',   '🤙🏿',   '🤙',   '🤚🏻',   '🤚🏼',   '🤚🏽',   '🤚🏾',   '🤚🏿',   '🤚',   '🤛🏻',   '🤛🏼',   '🤛🏽',   '🤛🏾',   '🤛🏿',   '🤛',   '🤜🏻',   '🤜🏼',   '🤜🏽',   '🤜🏾',   '🤜🏿',   '🤜',   '🤝',   '🤞🏻',   '🤞🏼',   '🤞🏽',   '🤞🏾',   '🤞🏿',   '🤞',   '🤟🏻',   '🤟🏼',   '🤟🏽',   '🤟🏾',   '🤟🏿',   '🤟',   '🤠',   '🤡',   '🤢',   '🤣',   '🤤',   '🤥',   '🤦🏻‍♀️',   '🤦🏻‍♂️',   '🤦🏻',   '🤦🏼‍♀️',   '🤦🏼‍♂️',   '🤦🏼',   '🤦🏽‍♀️',   '🤦🏽‍♂️',   '🤦🏽',   '🤦🏾‍♀️',   '🤦🏾‍♂️',   '🤦🏾',   '🤦🏿‍♀️',   '🤦🏿‍♂️',   '🤦🏿',   '🤦‍♀️',   '🤦‍♂️',   '🤦',   '🤧',   '🤨',   '🤩',   '🤪',   '🤫',   '🤬',   '🤭',   '🤮',   '🤯',   '🤰🏻',   '🤰🏼',   '🤰🏽',   '🤰🏾',   '🤰🏿',   '🤰',   '🤱🏻',   '🤱🏼',   '🤱🏽',   '🤱🏾',   '🤱🏿',   '🤱',   '🤲🏻',   '🤲🏼',   '🤲🏽',   '🤲🏾',   '🤲🏿',   '🤲',   '🤳🏻',   '🤳🏼',   '🤳🏽',   '🤳🏾',   '🤳🏿',   '🤳',   '🤴🏻',   '🤴🏼',   '🤴🏽',   '🤴🏾',   '🤴🏿',   '🤴',   '🤵🏻‍♀️',   '🤵🏻‍♂️',   '🤵🏻',   '🤵🏼‍♀️',   '🤵🏼‍♂️',   '🤵🏼',   '🤵🏽‍♀️',   '🤵🏽‍♂️',   '🤵🏽',   '🤵🏾‍♀️',   '🤵🏾‍♂️',   '🤵🏾',   '🤵🏿‍♀️',   '🤵🏿‍♂️',   '🤵🏿',   '🤵‍♀️',   '🤵‍♂️',   '🤵',   '🤶🏻',   '🤶🏼',   '🤶🏽',   '🤶🏾',   '🤶🏿',   '🤶',   '🤷🏻‍♀️',   '🤷🏻‍♂️',   '🤷🏻',   '🤷🏼‍♀️',   '🤷🏼‍♂️',   '🤷🏼',   '🤷🏽‍♀️',   '🤷🏽‍♂️',   '🤷🏽',   '🤷🏾‍♀️',   '🤷🏾‍♂️',   '🤷🏾',   '🤷🏿‍♀️',   '🤷🏿‍♂️',   '🤷🏿',   '🤷‍♀️',   '🤷‍♂️',   '🤷',   '🤸🏻‍♀️',   '🤸🏻‍♂️',   '🤸🏻',   '🤸🏼‍♀️',   '🤸🏼‍♂️',   '🤸🏼',   '🤸🏽‍♀️',   '🤸🏽‍♂️',   '🤸🏽',   '🤸🏾‍♀️',   '🤸🏾‍♂️',   '🤸🏾',   '🤸🏿‍♀️',   '🤸🏿‍♂️',   '🤸🏿',   '🤸‍♀️',   '🤸‍♂️',   '🤸',   '🤹🏻‍♀️',   '🤹🏻‍♂️',   '🤹🏻',   '🤹🏼‍♀️',   '🤹🏼‍♂️',   '🤹🏼',   '🤹🏽‍♀️',   '🤹🏽‍♂️',   '🤹🏽',   '🤹🏾‍♀️',   '🤹🏾‍♂️',   '🤹🏾',   '🤹🏿‍♀️',   '🤹🏿‍♂️',   '🤹🏿',   '🤹‍♀️',   '🤹‍♂️',   '🤹',   '🤺',   '🤼‍♀️',   '🤼‍♂️',   '🤼',   '🤽🏻‍♀️',   '🤽🏻‍♂️',   '🤽🏻',   '🤽🏼‍♀️',   '🤽🏼‍♂️',   '🤽🏼',   '🤽🏽‍♀️',   '🤽🏽‍♂️',   '🤽🏽',   '🤽🏾‍♀️',   '🤽🏾‍♂️',   '🤽🏾',   '🤽🏿‍♀️',   '🤽🏿‍♂️',   '🤽🏿',   '🤽‍♀️',   '🤽‍♂️',   '🤽',   '🤾🏻‍♀️',   '🤾🏻‍♂️',   '🤾🏻',   '🤾🏼‍♀️',   '🤾🏼‍♂️',   '🤾🏼',   '🤾🏽‍♀️',   '🤾🏽‍♂️',   '🤾🏽',   '🤾🏾‍♀️',   '🤾🏾‍♂️',   '🤾🏾',   '🤾🏿‍♀️',   '🤾🏿‍♂️',   '🤾🏿',   '🤾‍♀️',   '🤾‍♂️',   '🤾',   '🤿',   '🥀',   '🥁',   '🥂',   '🥃',   '🥄',   '🥅',   '🥇',   '🥈',   '🥉',   '🥊',   '🥋',   '🥌',   '🥍',   '🥎',   '🥏',   '🥐',   '🥑',   '🥒',   '🥓',   '🥔',   '🥕',   '🥖',   '🥗',   '🥘',   '🥙',   '🥚',   '🥛',   '🥜',   '🥝',   '🥞',   '🥟',   '🥠',   '🥡',   '🥢',   '🥣',   '🥤',   '🥥',   '🥦',   '🥧',   '🥨',   '🥩',   '🥪',   '🥫',   '🥬',   '🥭',   '🥮',   '🥯',   '🥰',   '🥱',   '🥲',   '🥳',   '🥴',   '🥵',   '🥶',   '🥷🏻',   '🥷🏼',   '🥷🏽',   '🥷🏾',   '🥷🏿',   '🥷',   '🥸',   '🥺',   '🥻',   '🥼',   '🥽',   '🥾',   '🥿',   '🦀',   '🦁',   '🦂',   '🦃',   '🦄',   '🦅',   '🦆',   '🦇',   '🦈',   '🦉',   '🦊',   '🦋',   '🦌',   '🦍',   '🦎',   '🦏',   '🦐',   '🦑',   '🦒',   '🦓',   '🦔',   '🦕',   '🦖',   '🦗',   '🦘',   '🦙',   '🦚',   '🦛',   '🦜',   '🦝',   '🦞',   '🦟',   '🦠',   '🦡',   '🦢',   '🦣',   '🦤',   '🦥',   '🦦',   '🦧',   '🦨',   '🦩',   '🦪',   '🦫',   '🦬',   '🦭',   '🦮',   '🦯',   '🦰',   '🦱',   '🦲',   '🦳',   '🦴',   '🦵🏻',   '🦵🏼',   '🦵🏽',   '🦵🏾',   '🦵🏿',   '🦵',   '🦶🏻',   '🦶🏼',   '🦶🏽',   '🦶🏾',   '🦶🏿',   '🦶',   '🦷',   '🦸🏻‍♀️',   '🦸🏻‍♂️',   '🦸🏻',   '🦸🏼‍♀️',   '🦸🏼‍♂️',   '🦸🏼',   '🦸🏽‍♀️',   '🦸🏽‍♂️',   '🦸🏽',   '🦸🏾‍♀️',   '🦸🏾‍♂️',   '🦸🏾',   '🦸🏿‍♀️',   '🦸🏿‍♂️',   '🦸🏿',   '🦸‍♀️',   '🦸‍♂️',   '🦸',   '🦹🏻‍♀️',   '🦹🏻‍♂️',   '🦹🏻',   '🦹🏼‍♀️',   '🦹🏼‍♂️',   '🦹🏼',   '🦹🏽‍♀️',   '🦹🏽‍♂️',   '🦹🏽',   '🦹🏾‍♀️',   '🦹🏾‍♂️',   '🦹🏾',   '🦹🏿‍♀️',   '🦹🏿‍♂️',   '🦹🏿',   '🦹‍♀️',   '🦹‍♂️',   '🦹',   '🦺',   '🦻🏻',   '🦻🏼',   '🦻🏽',   '🦻🏾',   '🦻🏿',   '🦻',   '🦼',   '🦽',   '🦾',   '🦿',   '🧀',   '🧁',   '🧂',   '🧃',   '🧄',   '🧅',   '🧆',   '🧇',   '🧈',   '🧉',   '🧊',   '🧋',   '🧍🏻‍♀️',   '🧍🏻‍♂️',   '🧍🏻',   '🧍🏼‍♀️',   '🧍🏼‍♂️',   '🧍🏼',   '🧍🏽‍♀️',   '🧍🏽‍♂️',   '🧍🏽',   '🧍🏾‍♀️',   '🧍🏾‍♂️',   '🧍🏾',   '🧍🏿‍♀️',   '🧍🏿‍♂️',   '🧍🏿',   '🧍‍♀️',   '🧍‍♂️',   '🧍',   '🧎🏻‍♀️',   '🧎🏻‍♂️',   '🧎🏻',   '🧎🏼‍♀️',   '🧎🏼‍♂️',   '🧎🏼',   '🧎🏽‍♀️',   '🧎🏽‍♂️',   '🧎🏽',   '🧎🏾‍♀️',   '🧎🏾‍♂️',   '🧎🏾',   '🧎🏿‍♀️',   '🧎🏿‍♂️',   '🧎🏿',   '🧎‍♀️',   '🧎‍♂️',   '🧎',   '🧏🏻‍♀️',   '🧏🏻‍♂️',   '🧏🏻',   '🧏🏼‍♀️',   '🧏🏼‍♂️',   '🧏🏼',   '🧏🏽‍♀️',   '🧏🏽‍♂️',   '🧏🏽',   '🧏🏾‍♀️',   '🧏🏾‍♂️',   '🧏🏾',   '🧏🏿‍♀️',   '🧏🏿‍♂️',   '🧏🏿',   '🧏‍♀️',   '🧏‍♂️',   '🧏',   '🧐',   '🧑🏻‍🌾',   '🧑🏻‍🍳',   '🧑🏻‍🍼',   '🧑🏻‍🎄',   '🧑🏻‍🎓',   '🧑🏻‍🎤',   '🧑🏻‍🎨',   '🧑🏻‍🏫',   '🧑🏻‍🏭',   '🧑🏻‍💻',   '🧑🏻‍💼',   '🧑🏻‍🔧',   '🧑🏻‍🔬',   '🧑🏻‍🚀',   '🧑🏻‍🚒',   '🧑🏻‍🤝‍🧑🏻',   '🧑🏻‍🤝‍🧑🏼',   '🧑🏻‍🤝‍🧑🏽',   '🧑🏻‍🤝‍🧑🏾',   '🧑🏻‍🤝‍🧑🏿',   '🧑🏻‍🦯',   '🧑🏻‍🦰',   '🧑🏻‍🦱',   '🧑🏻‍🦲',   '🧑🏻‍🦳',   '🧑🏻‍🦼',   '🧑🏻‍🦽',   '🧑🏻‍⚕️',   '🧑🏻‍⚖️',   '🧑🏻‍✈️',   '🧑🏻',   '🧑🏼‍🌾',   '🧑🏼‍🍳',   '🧑🏼‍🍼',   '🧑🏼‍🎄',   '🧑🏼‍🎓',   '🧑🏼‍🎤',   '🧑🏼‍🎨',   '🧑🏼‍🏫',   '🧑🏼‍🏭',   '🧑🏼‍💻',   '🧑🏼‍💼',   '🧑🏼‍🔧',   '🧑🏼‍🔬',   '🧑🏼‍🚀',   '🧑🏼‍🚒',   '🧑🏼‍🤝‍🧑🏻',   '🧑🏼‍🤝‍🧑🏼',   '🧑🏼‍🤝‍🧑🏽',   '🧑🏼‍🤝‍🧑🏾',   '🧑🏼‍🤝‍🧑🏿',   '🧑🏼‍🦯',   '🧑🏼‍🦰',   '🧑🏼‍🦱',   '🧑🏼‍🦲',   '🧑🏼‍🦳',   '🧑🏼‍🦼',   '🧑🏼‍🦽',   '🧑🏼‍⚕️',   '🧑🏼‍⚖️',   '🧑🏼‍✈️',   '🧑🏼',   '🧑🏽‍🌾',   '🧑🏽‍🍳',   '🧑🏽‍🍼',   '🧑🏽‍🎄',   '🧑🏽‍🎓',   '🧑🏽‍🎤',   '🧑🏽‍🎨',   '🧑🏽‍🏫',   '🧑🏽‍🏭',   '🧑🏽‍💻',   '🧑🏽‍💼',   '🧑🏽‍🔧',   '🧑🏽‍🔬',   '🧑🏽‍🚀',   '🧑🏽‍🚒',   '🧑🏽‍🤝‍🧑🏻',   '🧑🏽‍🤝‍🧑🏼',   '🧑🏽‍🤝‍🧑🏽',   '🧑🏽‍🤝‍🧑🏾',   '🧑🏽‍🤝‍🧑🏿',   '🧑🏽‍🦯',   '🧑🏽‍🦰',   '🧑🏽‍🦱',   '🧑🏽‍🦲',   '🧑🏽‍🦳',   '🧑🏽‍🦼',   '🧑🏽‍🦽',   '🧑🏽‍⚕️',   '🧑🏽‍⚖️',   '🧑🏽‍✈️',   '🧑🏽',   '🧑🏾‍🌾',   '🧑🏾‍🍳',   '🧑🏾‍🍼',   '🧑🏾‍🎄',   '🧑🏾‍🎓',   '🧑🏾‍🎤',   '🧑🏾‍🎨',   '🧑🏾‍🏫',   '🧑🏾‍🏭',   '🧑🏾‍💻',   '🧑🏾‍💼',   '🧑🏾‍🔧',   '🧑🏾‍🔬',   '🧑🏾‍🚀',   '🧑🏾‍🚒',   '🧑🏾‍🤝‍🧑🏻',   '🧑🏾‍🤝‍🧑🏼',   '🧑🏾‍🤝‍🧑🏽',   '🧑🏾‍🤝‍🧑🏾',   '🧑🏾‍🤝‍🧑🏿',   '🧑🏾‍🦯',   '🧑🏾‍🦰',   '🧑🏾‍🦱',   '🧑🏾‍🦲',   '🧑🏾‍🦳',   '🧑🏾‍🦼',   '🧑🏾‍🦽',   '🧑🏾‍⚕️',   '🧑🏾‍⚖️',   '🧑🏾‍✈️',   '🧑🏾',   '🧑🏿‍🌾',   '🧑🏿‍🍳',   '🧑🏿‍🍼',   '🧑🏿‍🎄',   '🧑🏿‍🎓',   '🧑🏿‍🎤',   '🧑🏿‍🎨',   '🧑🏿‍🏫',   '🧑🏿‍🏭',   '🧑🏿‍💻',   '🧑🏿‍💼',   '🧑🏿‍🔧',   '🧑🏿‍🔬',   '🧑🏿‍🚀',   '🧑🏿‍🚒',   '🧑🏿‍🤝‍🧑🏻',   '🧑🏿‍🤝‍🧑🏼',   '🧑🏿‍🤝‍🧑🏽',   '🧑🏿‍🤝‍🧑🏾',   '🧑🏿‍🤝‍🧑🏿',   '🧑🏿‍🦯',   '🧑🏿‍🦰',   '🧑🏿‍🦱',   '🧑🏿‍🦲',   '🧑🏿‍🦳',   '🧑🏿‍🦼',   '🧑🏿‍🦽',   '🧑🏿‍⚕️',   '🧑🏿‍⚖️',   '🧑🏿‍✈️',   '🧑🏿',   '🧑‍🌾',   '🧑‍🍳',   '🧑‍🍼',   '🧑‍🎄',   '🧑‍🎓',   '🧑‍🎤',   '🧑‍🎨',   '🧑‍🏫',   '🧑‍🏭',   '🧑‍💻',   '🧑‍💼',   '🧑‍🔧',   '🧑‍🔬',   '🧑‍🚀',   '🧑‍🚒',   '🧑‍🤝‍🧑',   '🧑‍🦯',   '🧑‍🦰',   '🧑‍🦱',   '🧑‍🦲',   '🧑‍🦳',   '🧑‍🦼',   '🧑‍🦽',   '🧑‍⚕️',   '🧑‍⚖️',   '🧑‍✈️',   '🧑',   '🧒🏻',   '🧒🏼',   '🧒🏽',   '🧒🏾',   '🧒🏿',   '🧒',   '🧓🏻',   '🧓🏼',   '🧓🏽',   '🧓🏾',   '🧓🏿',   '🧓',   '🧔🏻',   '🧔🏼',   '🧔🏽',   '🧔🏾',   '🧔🏿',   '🧔',   '🧕🏻',   '🧕🏼',   '🧕🏽',   '🧕🏾',   '🧕🏿',   '🧕',   '🧖🏻‍♀️',   '🧖🏻‍♂️',   '🧖🏻',   '🧖🏼‍♀️',   '🧖🏼‍♂️',   '🧖🏼',   '🧖🏽‍♀️',   '🧖🏽‍♂️',   '🧖🏽',   '🧖🏾‍♀️',   '🧖🏾‍♂️',   '🧖🏾',   '🧖🏿‍♀️',   '🧖🏿‍♂️',   '🧖🏿',   '🧖‍♀️',   '🧖‍♂️',   '🧖',   '🧗🏻‍♀️',   '🧗🏻‍♂️',   '🧗🏻',   '🧗🏼‍♀️',   '🧗🏼‍♂️',   '🧗🏼',   '🧗🏽‍♀️',   '🧗🏽‍♂️',   '🧗🏽',   '🧗🏾‍♀️',   '🧗🏾‍♂️',   '🧗🏾',   '🧗🏿‍♀️',   '🧗🏿‍♂️',   '🧗🏿',   '🧗‍♀️',   '🧗‍♂️',   '🧗',   '🧘🏻‍♀️',   '🧘🏻‍♂️',   '🧘🏻',   '🧘🏼‍♀️',   '🧘🏼‍♂️',   '🧘🏼',   '🧘🏽‍♀️',   '🧘🏽‍♂️',   '🧘🏽',   '🧘🏾‍♀️',   '🧘🏾‍♂️',   '🧘🏾',   '🧘🏿‍♀️',   '🧘🏿‍♂️',   '🧘🏿',   '🧘‍♀️',   '🧘‍♂️',   '🧘',   '🧙🏻‍♀️',   '🧙🏻‍♂️',   '🧙🏻',   '🧙🏼‍♀️',   '🧙🏼‍♂️',   '🧙🏼',   '🧙🏽‍♀️',   '🧙🏽‍♂️',   '🧙🏽',   '🧙🏾‍♀️',   '🧙🏾‍♂️',   '🧙🏾',   '🧙🏿‍♀️',   '🧙🏿‍♂️',   '🧙🏿',   '🧙‍♀️',   '🧙‍♂️',   '🧙',   '🧚🏻‍♀️',   '🧚🏻‍♂️',   '🧚🏻',   '🧚🏼‍♀️',   '🧚🏼‍♂️',   '🧚🏼',   '🧚🏽‍♀️',   '🧚🏽‍♂️',   '🧚🏽',   '🧚🏾‍♀️',   '🧚🏾‍♂️',   '🧚🏾',   '🧚🏿‍♀️',   '🧚🏿‍♂️',   '🧚🏿',   '🧚‍♀️',   '🧚‍♂️',   '🧚',   '🧛🏻‍♀️',   '🧛🏻‍♂️',   '🧛🏻',   '🧛🏼‍♀️',   '🧛🏼‍♂️',   '🧛🏼',   '🧛🏽‍♀️',   '🧛🏽‍♂️',   '🧛🏽',   '🧛🏾‍♀️',   '🧛🏾‍♂️',   '🧛🏾',   '🧛🏿‍♀️',   '🧛🏿‍♂️',   '🧛🏿',   '🧛‍♀️',   '🧛‍♂️',   '🧛',   '🧜🏻‍♀️',   '🧜🏻‍♂️',   '🧜🏻',   '🧜🏼‍♀️',   '🧜🏼‍♂️',   '🧜🏼',   '🧜🏽‍♀️',   '🧜🏽‍♂️',   '🧜🏽',   '🧜🏾‍♀️',   '🧜🏾‍♂️',   '🧜🏾',   '🧜🏿‍♀️',   '🧜🏿‍♂️',   '🧜🏿',   '🧜‍♀️',   '🧜‍♂️',   '🧜',   '🧝🏻‍♀️',   '🧝🏻‍♂️',   '🧝🏻',   '🧝🏼‍♀️',   '🧝🏼‍♂️',   '🧝🏼',   '🧝🏽‍♀️',   '🧝🏽‍♂️',   '🧝🏽',   '🧝🏾‍♀️',   '🧝🏾‍♂️',   '🧝🏾',   '🧝🏿‍♀️',   '🧝🏿‍♂️',   '🧝🏿',   '🧝‍♀️',   '🧝‍♂️',   '🧝',   '🧞‍♀️',   '🧞‍♂️',   '🧞',   '🧟‍♀️',   '🧟‍♂️',   '🧟',   '🧠',   '🧡',   '🧢',   '🧣',   '🧤',   '🧥',   '🧦',   '🧧',   '🧨',   '🧩',   '🧪',   '🧫',   '🧬',   '🧭',   '🧮',   '🧯',   '🧰',   '🧱',   '🧲',   '🧳',   '🧴',   '🧵',   '🧶',   '🧷',   '🧸',   '🧹',   '🧺',   '🧻',   '🧼',   '🧽',   '🧾',   '🧿',   '🩰',   '🩱',   '🩲',   '🩳',   '🩴',   '🩸',   '🩹',   '🩺',   '🪀',   '🪁',   '🪂',   '🪃',   '🪄',   '🪅',   '🪆',   '🪐',   '🪑',   '🪒',   '🪓',   '🪔',   '🪕',   '🪖',   '🪗',   '🪘',   '🪙',   '🪚',   '🪛',   '🪜',   '🪝',   '🪞',   '🪟',   '🪠',   '🪡',   '🪢',   '🪣',   '🪤',   '🪥',   '🪦',   '🪧',   '🪨',   '🪰',   '🪱',   '🪲',   '🪳',   '🪴',   '🪵',   '🪶',   '🫀',   '🫁',   '🫂',   '🫐',   '🫑',   '🫒',   '🫓',   '🫔',   '🫕',   '🫖',   '‼️',   '⁉️',   '™️',   'ℹ️',   '↔️',   '↕️',   '↖️',   '↗️',   '↘️',   '↙️',   '↩️',   '↪️',   '#⃣',   '⌚️',   '⌛️',   '⌨️',   '⏏️',   '⏩',   '⏪',   '⏫',   '⏬',   '⏭️',   '⏮️',   '⏯️',   '⏰',   '⏱️',   '⏲️',   '⏳',   '⏸️',   '⏹️',   '⏺️',   'Ⓜ️',   '▪️',   '▫️',   '▶️',   '◀️',   '◻️',   '◼️',   '◽️',   '◾️',   '☀️',   '☁️',   '☂️',   '☃️',   '☄️',   '☎️',   '☑️',   '☔️',   '☕️',   '☘️',   '☝🏻',   '☝🏼',   '☝🏽',   '☝🏾',   '☝🏿',   '☝️',   '☠️',   '☢️',   '☣️',   '☦️',   '☪️',   '☮️',   '☯️',   '☸️',   '☹️',   '☺️',   '♀️',   '♂️',   '♈️',   '♉️',   '♊️',   '♋️',   '♌️',   '♍️',   '♎️',   '♏️',   '♐️',   '♑️',   '♒️',   '♓️',   '♟️',   '♠️',   '♣️',   '♥️',   '♦️',   '♨️',   '♻️',   '♾',   '♿️',   '⚒️',   '⚓️',   '⚔️',   '⚕️',   '⚖️',   '⚗️',   '⚙️',   '⚛️',   '⚜️',   '⚠️',   '⚡️',   '⚧️',   '⚪️',   '⚫️',   '⚰️',   '⚱️',   '⚽️',   '⚾️',   '⛄️',   '⛅️',   '⛈️',   '⛎',   '⛏️',   '⛑️',   '⛓️',   '⛔️',   '⛩️',   '⛪️',   '⛰️',   '⛱️',   '⛲️',   '⛳️',   '⛴️',   '⛵️',   '⛷🏻',   '⛷🏼',   '⛷🏽',   '⛷🏾',   '⛷🏿',   '⛷️',   '⛸️',   '⛹🏻‍♀️',   '⛹🏻‍♂️',   '⛹🏻',   '⛹🏼‍♀️',   '⛹🏼‍♂️',   '⛹🏼',   '⛹🏽‍♀️',   '⛹🏽‍♂️',   '⛹🏽',   '⛹🏾‍♀️',   '⛹🏾‍♂️',   '⛹🏾',   '⛹🏿‍♀️',   '⛹🏿‍♂️',   '⛹🏿',   '⛹️‍♀️',   '⛹️‍♂️',   '⛹️',   '⛺️',   '⛽️',   '✂️',   '✅',   '✈️',   '✉️',   '✊🏻',   '✊🏼',   '✊🏽',   '✊🏾',   '✊🏿',   '✊',   '✋🏻',   '✋🏼',   '✋🏽',   '✋🏾',   '✋🏿',   '✋',   '✌🏻',   '✌🏼',   '✌🏽',   '✌🏾',   '✌🏿',   '✌️',   '✍🏻',   '✍🏼',   '✍🏽',   '✍🏾',   '✍🏿',   '✍️',   '✏️',   '✒️',   '✔️',   '✖️',   '✝️',   '✡️',   '✨',   '✳️',   '✴️',   '❄️',   '❇️',   '❌',   '❎',   '❓',   '❔',   '❕',   '❗️',   '❣️',   '❤️',   '➕',   '➖',   '➗',   '➡️',   '➰',   '➿',   '⤴️',   '⤵️',   '*⃣',   '⬅️',   '⬆️',   '⬇️',   '⬛️',   '⬜️',   '⭐️',   '⭕️',   '0⃣',   '〰️',   '〽️',   '1⃣',   '2⃣',   '㊗️',   '㊙️',   '3⃣',   '4⃣',   '5⃣',   '6⃣',   '7⃣',   '8⃣',   '9⃣',   '©️',   '®️',   ''])}`
let emot = `${pickRandom(['⎔', '✦', '⭑', 'ᯬ', '⭔', '◉', '⬟', '▢', '᭻', '»', '〆', '々', '⛥', '✗', '⛊', '⚜', '⚝', '⚚', '♪'])}`
const defaultMenu = {
  before: `
Hai, *%name!*

*Tanggal:* %week, %date
*Waktu:* %time
*Bot Online:* %uptime (%muptime)
*Pengguna:* %totalreg Orang
*Lib:* Baileys-Md
*Language:* Javascript,Ts-Node
*Fitur:* %totalfeatures command

%readmore
*Support me:* _https://instagram.com/kokopangeran_
*Note:*
_Jika Respon Tidak Muncul Kemungkinan Terjadi Error_
`.trimStart(),
  header: '▣═━–〈 *%category* 〉–━═▣',
  body: `┊${emot} %cmd %islimit %isPremium`,
  footer: '┗–––––––––––━═▣\n',
  after: `⌕ ❙❘❙❙❘❙❚❙❘❙❙❚❙❘❙❘❙❚❙❘❙❙❚❙❘❙❙❘❙❚❙❘ 
`,
}
let handler = async (m, { conn, command, groupMetadata, usedPrefix: _p, __dirname, args }) => {

let ktnya = ['\n\n\n' + htjava + ' Mungkin menu ini bermanfaat? ' + htjava,
 '\n\n\n' + htjava + ' Terimakasih sudah menggunakan bot ini ' + htjava,
 '\n\n\n' + htjava + ' Semoga gak erorr ' + htjava,
 '\n\n\n' + htjava + ' Jika lama kemungkiman erorr atau delay ' + htjava,
 '\n\n\n' + htjava + ' Menampilkan menu ' + htjava,
 '\n\n\n' + htjava + ' Wait... ' + htjava,
 '\n\n\n' + htjava + ' Dua tiga kucing berlari ' + htjava,
 '\n\n\n' + htjava + ' Bentar bang akan kutampilkan menunya ' + htjava,
 '\n\n\n' + htjava + ' Prosess... ' + htjava]
let ktx = ktnya.getRandom()
    let who = m.mentionedJid && m.mentionedJid[0] ? m.mentionedJid[0] : m.fromMe ? conn.user.jid : m.sender
    let { exp, limit, level, role, money, lastclaim, lastweekly, registered, regTime, age, banned, pasangan } = global.db.data.users[who]
    let { min, xp, max } = xpRange(level, global.multiplier)
    let name = await conn.getName(who)
    let pp = await conn.profilePictureUrl(who).catch(_ => './src/avatar_contact.png')
    if (typeof global.db.data.users[who] == "undefined") {
      global.db.data.users[who] = {
        exp: 0,
        limit: 10,
        lastclaim: 0,
        registered: true,
        name: conn.getName(m.sender),
        age: -1,
        regTime: -1,
        afk: -1,
        afkReason: '',
        banned: false,
        level: 0,
        lastweekly: 0,
        role: 'Warrior V',
        autolevelup: false,
        money: 0,
        pasangan: "",
      }
     }
     let math = max - xp
     let tags
     let teks = `${args[0]}`.toLowerCase()
  let arrayMenu = ['all', 'absen', 'admin', 'advanced', 'anonymous', 'audio', 'Baileys', 'database', 'downloader', 'edukasi', 'fun', 'game', 'group', 'host', 'info', 'internet', 'jadian', 'jadibot', 'kerang', 'main', 'maker', 'nocategory', 'nsfw', 'nulis', 'owner', 'premium', 'primbon', 'quotes', 'quran', 'random', 'rpg', 'sticker', 'tools', 'vote', 'xp']
  if (!arrayMenu.includes(teks)) teks = '404'
  if (teks == 'all') tags = {
  'main': 'Main',
  'rpg': 'RolePlay Games',
  'xp': 'Exp & Limit',
  'jadian': 'Jadian',
  'sticker': 'Sticker',
  'edukasi': 'Edukasi',
  'quran': 'Al Quran',
  'tools': 'Tools',
  'kerang': 'Kerang Ajaib',
  'primbon': 'Primbon',
  'fun': 'Fun',
  'game': 'Game',
  'quotes': 'Quotes',
  'audio': 'Audio',
  'maker': 'Maker',
  'downloader': 'Downloader',
  'internet': 'Internet',
  'random': 'Random',
  'nsfw': 'Nsfw',
  'nulis': 'MagerNulis & Logo',
  'anonymous': 'Anonymous Chat',
  'database': 'Database',
  'admin': 'Admin',
  'group': 'Group',
  'vote': 'Voting',
  'absen': 'Absen',
  'premium': 'Premium',
  'advanced': 'Advanced',
  'info': 'Info',
  'owner': 'Owner',
  'jadibot': 'Jadi Bot',
  'host': 'Host',
  'Baileys': 'Baileys',
  'nocategory': 'No Category',
}
  if (teks == 'absen') tags = {
    'absen': 'Absen'
  }
  if (teks == 'admin') tags = {
    'admin': 'Admin'
  }
  if (teks == 'advanced') tags = {
    'advanced': 'Advanced'
  }
  if (teks == 'anonymous') tags = {
    'anonymous': 'Anonymous Chat'
  }
  if (teks == 'audio') tags = {
    'audio': 'Audio'
  }
  if (teks == 'Baileys') tags = {
    'Baileys': 'Baileys'
  }
  if (teks == 'database') tags = {
    'database': 'Database'
  }
  if (teks == 'downloader') tags = {
    'downloader': 'Downloader'
  }
  if (teks == 'edukasi') tags = {
    'edukasi': 'Edukasi'
  }
  if (teks == 'fun') tags = {
    'fun': 'Fun'
  }
  if (teks == 'game') tags = {
    'game': 'Game'
  }
  if (teks == 'group') tags = {
    'group': 'Group'
  }
  if (teks == 'host') tags = {
    'host': 'Host'
  }
  if (teks == 'info') tags = {
    'info': 'Info'
  }
  if (teks == 'internet') tags = {
    'internet': 'Internet'
  }
  if (teks == 'jadian') tags = {
    'jadian': 'Jadian'
  }
  if (teks == 'jadibot') tags = {
    'jadibot': 'Jadi Bot'
  }
  if (teks == 'kerang') tags = {
    'kerang': 'Kerang Ajaib'
  }
  if (teks == 'main') tags = {
    'main': 'Main'
  }
  if (teks == 'maker') tags = {
    'maker': 'Maker'
  }
  if (teks == 'nsfw') tags = {
    'nsfw': 'Nsfw'
  }
  if (teks == 'nulis') tags = {
    'nulis': 'MagerNulis & Logo'
  }
  if (teks == 'owner') tags = {
    'owner': 'Owner'
  }
  if (teks == 'premium') tags = {
    'premium': 'Premium'
  }
  if (teks == 'primbon') tags = {
    'primbon': 'Primbon'
  }
  if (teks == 'quotes') tags = {
    'quotes': 'Quotes'
  }
  if (teks == 'quran') tags = {
    'quran': 'Al Quran'
  }
  if (teks == 'random') tags = {
    'random': 'Random'
  }
  if (teks == 'rpg') tags = {
    'rpg': 'RolePlay Games'
  }
  if (teks == 'sticker') tags = {
    'sticker': 'Sticker'
  }
  if (teks == 'tools') tags = {
    'tools': 'Tools'
  }
  if (teks == 'vote') tags = {
    'vote': 'Voting'
  }
  if (teks == 'xp') tags = {
    'xp': 'Exp & Limit'
  }
  if (teks == 'nocategory') tags = {
    'nocategory': 'No Category'
  }
                      
    try {
      const sections = [
   {
	title: `${htki} MAIN ${htka}`,
	rows: [
	    {title: `⚡ SPEED BOT`, rowId: ".ping", description: "Menampilkan kecepatan respon BOT"},
	    {title: `💌 OWNER BOT`, rowId: ".owner", description: "Menampilkan List owner BOT"},
            {title: `❤️ MY BOY FRIEND`, rowId: ".bfowner", description: "Menampilkan List My Boy Friend"},
	    {title: `📔 SCRIPT BOT`, rowId: ".sc", description: `Source Code`},
	]
    },{
	title: `${htki} SUPPORT ${htka}`,
	rows: [
	    {title: `🔖 SEWA`, rowId: ".sewabot", description: "Menampilkan list harga sewa BOT"},
	    {title: `🌟 LIST PREMIUM`, rowId: ".premium", description: "Menampilkan list harga premium"},
	    {title: `💹 DONASI`, rowId: ".donasi", description: 'Support BOT agar lebih fast respon'},
	]
	},{
	title: `${htki} MENU ${htka}`,
	rows: [
	{title: `${emoj} ${emot} Menu All Menu ${emot}`, rowId: ".menulist all", description: ktx},
	{title: `${emoj} ${emot} Menu Absen ${emot}`, rowId: ".menulist absen", description: ktx},
	{title: `${emoj} ${emot} Menu Admin ${emot}`, rowId: ".menulist admin", description: ktx},
	{title: `${emoj} ${emot} Menu Advanced ${emot}`, rowId: ".menulist advanced", description: ktx},
	{title: `${emoj} ${emot} Menu Anonymous ${emot}`, rowId: ".menulist anonymous", description: ktx},
	{title: `${emoj} ${emot} Menu Audio ${emot}`, rowId: ".menulist audio", description: ktx},
	{title: `${emoj} ${emot} Menu Baileys ${emot}`, rowId: ".menulist Baileys", description: ktx},
	{title: `${emoj} ${emot} Menu Database ${emot}`, rowId: ".menulist database", description: ktx},
	{title: `${emoj} ${emot} Menu Downloader ${emot}`, rowId: ".menulist downloader", description: ktx},
	{title: `${emoj} ${emot} Menu Edukasi ${emot}`, rowId: ".menulist edukasi", description: ktx},
	{title: `${emoj} ${emot} Menu Fun ${emot}`, rowId: ".menulist fun", description: ktx},
	{title: `${emoj} ${emot} Menu Game ${emot}`, rowId: ".menulist game", description: ktx},
	{title: `${emoj} ${emot} Menu Group ${emot}`, rowId: ".menulist group", description: ktx},
	{title: `${emoj} ${emot} Menu Host ${emot}`, rowId: ".menulist host", description: ktx},
	{title: `${emoj} ${emot} Menu Info ${emot}`, rowId: ".menulist info", description: ktx},
	{title: `${emoj} ${emot} Menu Internet ${emot}`, rowId: ".menulist internet", description: ktx},
	{title: `${emoj} ${emot} Menu Jadian ${emot}`, rowId: ".menulist jadian", description: ktx},
	{title: `${emoj} ${emot} Menu Jadibot ${emot}`, rowId: ".menulist jadibot", description: ktx},
	{title: `${emoj} ${emot} Menu Kerang ${emot}`, rowId: ".menulist kerang", description: ktx},
	{title: `${emoj} ${emot} Menu Main ${emot}`, rowId: ".menulist main", description: ktx},
	{title: `${emoj} ${emot} Menu Maker ${emot}`, rowId: ".menulist maker", description: ktx},
	{title: `${emoj} ${emot} Menu Nocategory ${emot}`, rowId: ".menulist nocategory", description: ktx},
	{title: `${emoj} ${emot} Menu Nsfw ${emot}`, rowId: ".menulist nsfw", description: ktx},
	{title: `${emoj} ${emot} Menu Nulis ${emot}`, rowId: ".menulist nulis", description: ktx},
	{title: `${emoj} ${emot} Menu Owner ${emot}`, rowId: ".menulist owner", description: ktx},
	{title: `${emoj} ${emot} Menu Premium ${emot}`, rowId: ".menulist premium", description: ktx},
	{title: `${emoj} ${emot} Menu Primbon ${emot}`, rowId: ".menulist primbon", description: ktx},
	{title: `${emoj} ${emot} Menu Quotes ${emot}`, rowId: ".menulist quotes", description: ktx},
	{title: `${emoj} ${emot} Menu Quran ${emot}`, rowId: ".menulist quran", description: ktx},
	{title: `${emoj} ${emot} Menu Random ${emot}`, rowId: ".menulist random", description: ktx},
	{title: `${emoj} ${emot} Menu RPG ${emot}`, rowId: ".menulist rpg", description: ktx},
	{title: `${emoj} ${emot} Menu Sticker ${emot}`, rowId: ".menulist sticker", description: ktx},
	{title: `${emoj} ${emot} Menu Tools ${emot}`, rowId: ".menulist tools", description: ktx},
	{title: `${emoj} ${emot} Menu Vote ${emot}`, rowId: ".menulist vote", description: ktx},
	{title: `${emoj} ${emot} Menu XP ${emot}`, rowId: ".menulist xp", description: ktx}
	]
  }
]

let tek = `*Hai ${conn.getName(m.sender)}* 👋

*YOUR PROFILE*
*🏷️ Nama:* *(${name})* ${registered ? '(' + name + ') ' : ''} ( @${who.split("@")[0]} )
*💲 Money:* *RP* ${money}
*🏆 Level* ${level}
*🎋 Role:* ${role}
*📨 Terdaftar:* ${registered ? 'Ya (' + new Date(regTime).toLocaleString() + ')' : 'Tidak'} ${lastclaim > 0 ? '\n*⏱️Terakhir Klaim:* ' + new Date(lastclaim).toLocaleString() : ''}\n\n Ketik /inv untuk melihat Inventory RPG
`
const listMessage = {
  text: tek,
  footer: '📮 *Note:* Jika menemukan bug, error atau kesulitan dalam penggunaan silahkan laporkan/tanyakan kepada Owner',
  mentions: await conn.parseMention(tek),
  title: `${htki} *LIST MENU* ${htka}`,
  buttonText: `CLICK HERE ⎙`,
  sections
}
  if (teks == '404') {
  	return conn.sendMessage(m.chat, listMessage, {quoted: fkontak})
    }
    
    let _package = JSON.parse(await promises.readFile(join(__dirname, '../package.json')).catch(_ => ({}))) || {}
    
    let totalfeatures = Object.values(global.plugins).filter(
    (v) => v.help && v.tags
  ).length;
    let d = new Date(new Date + 3600000)
    let locale = 'id'
    // d.getTimeZoneOffset()
    // Offset -420 is 18.00
    // Offset    0 is  0.00
    // Offset  420 is  7.00
    let weton = ['Pahing', 'Pon', 'Wage', 'Kliwon', 'Legi'][Math.floor(d / 84600000) % 5]
    let week = d.toLocaleDateString(locale, { weekday: 'long' })
    let date = d.toLocaleDateString(locale, {
      day: 'numeric',
      month: 'long',
      year: 'numeric'
    })
    let dateIslamic = Intl.DateTimeFormat(locale + '-TN-u-ca-islamic', {
      day: 'numeric',
      month: 'long',
      year: 'numeric'
    }).format(d)
    let time = d.toLocaleTimeString(locale, {
      hour: 'numeric',
      minute: 'numeric',
      second: 'numeric'
    })
    let _uptime = process.uptime() * 1000
    let _muptime
    if (process.send) {
      process.send('uptime')
      _muptime = await new Promise(resolve => {
        process.once('message', resolve)
        setTimeout(resolve, 1000)
      }) * 1000
    }
    let muptime = clockString(_muptime)
    let uptime = clockString(_uptime)
    let totalreg = Object.keys(global.db.data.users).length
    let rtotalreg = Object.values(global.db.data.users).filter(user => user.registered == true).length
    let help = Object.values(global.plugins).filter(plugin => !plugin.disabled).map(plugin => {
      return {
        help: Array.isArray(plugin.tags) ? plugin.help : [plugin.help],
        tags: Array.isArray(plugin.tags) ? plugin.tags : [plugin.tags],
        prefix: 'customPrefix' in plugin,
        limit: plugin.limit,
        premium: plugin.premium,
        enabled: !plugin.disabled,
      }
    })
    let groups = {}
    for (let tag in tags) {
      groups[tag] = []
      for (let plugin of help)
        if (plugin.tags && plugin.tags.includes(tag))
          if (plugin.help) groups[tag].push(plugin)
          }
    conn.menu = conn.menu ? conn.menu : {}
    let before = conn.menu.before || defaultMenu.before
    let header = conn.menu.header || defaultMenu.header
    let body = conn.menu.body || defaultMenu.body
    let footer = conn.menu.footer || defaultMenu.footer
    let after = conn.menu.after || (conn.user.jid == global.conn.user.jid ? '' : `Powered by https://wa.me/${global.conn.user.jid.split`@`[0]}`) + defaultMenu.after
    let _text = [
      before,
      ...Object.keys(tags).map(tag => {
        return header.replace(/%category/g, tags[tag]) + '\n' + [
          ...help.filter(menu => menu.tags && menu.tags.includes(tag) && menu.help).map(menu => {
            return menu.help.map(help => {
              return body.replace(/%cmd/g, menu.prefix ? help : '%p' + help)
                .replace(/%islimit/g, menu.limit ? '(Limit)' : '')
                .replace(/%isPremium/g, menu.premium ? '(Premium)' : '')
                .trim()
            }).join('\n')
          }),
          footer
        ].join('\n')
      }),
      after
    ].join('\n')
    let text = typeof conn.menu == 'string' ? conn.menu : typeof conn.menu == 'object' ? _text : ''
    let replace = {
      '%': '%',
      p: _p, uptime, muptime,
      me: conn.getName(conn.user.jid),
      npmname: _package.name,
      npmdesc: _package.description,
      version: _package.version,
      exp: exp - min,
      maxexp: xp,
      totalexp: exp,
      xp4levelup: max - exp,
      github: _package.homepage ? _package.homepage.url || _package.homepage : '[unknown github url]',
      level, totalfeatures, limit, name, weton, week, date, dateIslamic, time, totalreg, rtotalreg, role,
      readmore: readMore
    }
    text = text.replace(new RegExp(`%(${Object.keys(replace).sort((a, b) => b.length - a.length).join`|`})`, 'g'), (_, name) => '' + replace[name])
    //
    
    conn.sendHydrated(m.chat, text.trim(), wm + '\n\n' + botdate, hwaifu.getRandom(), gcwangsaf, 'Pangeran Group', who.split`@`[0], '+79811950242', [
      ['Menu', '/menu'],
      ['Owner', '/owner'],
      ['Test', '/ping']
    ], null, false, { mentions: [text] })
    
    /*
    try {
 let wel = await new Canvas.Welcome()
  .setUsername(`${name}`)
  .setDiscriminator(`${money} Money`)
  .setMemberCount(`${groupMetadata.participants.length}`)
  .setGuildName(`${groupMetadata.subject}`)
  .setAvatar(`${pp}`)
  .setColor("border", "#000000")
  .setColor("username-box", "#000000")
  .setColor("discriminator-box", "#000000")
  .setColor("message-box", "#000000")
  .setColor("title", "#FFFFFF")
  .setColor("avatar", "#000000")
  .setBackground("https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSF7c3n7snGnpzS676fXaU2yxSjGsFNrCURXw&usqp=CAU")
  .toAttachment();

  conn.sendHydrated2(m.chat, text.trim(), wm, wel.toBuffer(), webs, 'Website', gcwangsaf, 'Group WhatsApp', [
      ['Donate', '/donasi'],
      ['Owner', '/owner'],
      ['Test', '/ping']
    ], m)
    } catch {
    let wel = await new Canvas.Welcome()
  .setUsername(`${name}`)
  .setDiscriminator(`${exp} Exp`)
  .setMemberCount(`Money ${money}`)
  .setGuildName(`${global.author}`)
  .setAvatar(`${pp}`)
  .setColor("border", "#000000")
  .setColor("username-box", "#000000")
  .setColor("discriminator-box", "#000000")
  .setColor("message-box", "#000000")
  .setColor("title", "#FFFFFF")
  .setColor("avatar", "#000000")
  .setBackground("https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSF7c3n7snGnpzS676fXaU2yxSjGsFNrCURXw&usqp=CAU")
  .toAttachment();
  
    conn.sendHydrated2(m.chat, text.trim(), wm, wel.toBuffer(), webs, 'Website', gcwangsaf, 'Group WhatsApp', [
      ['Donate', '/donasi'],
      ['Owner', '/owner'],
      ['Test', '/ping']
    ], m)
    }
    */
                //
  } catch (e) {
    conn.reply(m.chat, 'Maaf, menu sedang error', m)
    throw e
  }
}

handler.command = /^(menulist)$/i

handler.exp = 3

export default handler

const more = String.fromCharCode(8206)
const readMore = more.repeat(4001)

function clockString(ms) {
  let h = isNaN(ms) ? '--' : Math.floor(ms / 3600000)
  let m = isNaN(ms) ? '--' : Math.floor(ms / 60000) % 60
  let s = isNaN(ms) ? '--' : Math.floor(ms / 1000) % 60
  return [h, m, s].map(v => v.toString().padStart(2, 0)).join(':')
}

function pickRandom(list) {
     return list[Math.floor(Math.random() * list.length)]
  }
